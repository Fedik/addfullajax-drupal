<?php
/**
 * @file
 * addfullajax
 * Add FullAjax library to Drupal 7
 * @since 2011.05.19
 *
 */

/**
 * Define default configuration
 */
function _addfullajax_def_values($name) {
  $def = array(
    'conf_base' => "
/* fullAjaxId - it content id, that generated based on the main region settings */
var filterUrl = ['/admin/','/logout','node/add','/edit'];
var filterQuery = ['q=admin','q=user/logout'];
FLAX.Filter.add({url:'/', id:fullAjaxId});
FLAX.Filter.add({url:filterUrl, query:filterQuery, type:'nowrap'});
FLAX.directLink();
FLAX.linkEqual[':ax:'+fullAjaxId+':'] = '!';
FLAX.linkEqual['[~q~]'] = '?';
FLAX.Filter.on('beforewrap', function(ops){
var regExt = /.+\.(jpg|jpeg|gif|png|mp3|mp4|ogg|ogv|webm|pdf|txt|odf|ods)$/i;
if (regExt.test(ops.el.href) || ops.el.nodeName == 'FORM' || ops.el.href.indexOf('/edit') != -1 || ops.el.href.indexOf('/add') != -1){return false;}
});
FLAX.Html.onall('unload', function(o){
  /* here can insert code for execut before content unloaded */
  Drupal.detachBehaviors('#'+fullAjaxId);
});
FLAX.Html.onall('load', function(o){
  /* here can insert code for execut after content loaded */
  Drupal.attachBehaviors('#'+fullAjaxId);
});
",
    'conf_anim' => "
FLAX.Effect.add({id:fullAjaxId, start: function(id, request){
 var mId = jQuery('#'+fullAjaxId), mIdWidth = mId.width(), mIdHeight = mId.height();
 if (!jQuery('#fullAjaxGif').length){
  jQuery('<img/>',{
   'id':'fullAjaxGif',
   'src':'sites/all/modules/addfullajax/images/ajax-loader.gif',
   'alt':'Loading...',
   'style':'position:absolute;border:none;padding:0;margin-left:'+ mIdWidth*0.5 +'px;top:'+ mIdHeight*0.3 +'px;'
  }).insertBefore(mId);
 };
 mId.fadeOut(300,request());
},
end: function(id){
 if (jQuery('#fullAjaxGif').length){jQuery('#fullAjaxGif').remove();};
 jQuery('#'+fullAjaxId).fadeIn(300);
}
});
"
  );
  return $def[$name];
}

/**
 * Implements hook_help().
 * @version 2012.04.23
 */
function addfullajax_help($path, $arg) {
  switch ($path) {
    case 'admin/help#addfullajax':
      return t('Help For FullAjax module.') . 'Advanced on <a href="https://github.com/Fedik/FullAJAX" target="_blank">github.com/Fedik/FullAJAX</a>';
  }
}
/**
 * Implements hook_permission().
 * @version 2011.05.19
 */
function addfullajax_permission() {
  return array(
    'administer addfullajax'  =>  array(
      'title'  =>  t('Administer the module'),
      'description'  =>  t('Perform maintenance tasks for the Add FullAjax module.'),
    ),
  );
}
/**
 * Implements hook_menu().
 * @version 2011.05.19
  */
function addfullajax_menu() {
  $items = array();

  $items['admin/config/development/addfullajax'] = array(
    'title'  =>  'Add FullAjax',
    'description'  =>  'Configuration for Add FullAjax module',
    'page callback'  =>  'drupal_get_form',
    'page arguments'  =>  array('addfullajax_admin_form'),
    'access arguments'  =>  array('administer addfullajax'),
    'type'  =>  MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Form function, called by drupal_get_form()
 * @version 2012.04.24
 */
function addfullajax_admin_form($form, &$form_state) {

//   $form['addfullajax_cssid'] = array(
//     '#type'  =>  'textfield',
//     '#title'  =>  t('CSS id for content block'),
//     '#default_value'  =>  variable_get('addfullajax_cssid', 'forajax'),
//     '#size'  =>  12,
//     '#maxlength'  =>  255,
//     '#description'  =>  t('CSS id for content block where shown contents'),
//     '#required'  =>  TRUE,
//   );

  $form['addfullajax_cnfg_themes'] = array(
      '#type'  =>  'fieldset',
      '#title'  =>  t('Themes configs'),
      '#collapsible'  =>  FALSE,
      '#collapsed'  =>  FALSE,
      'addfullajax_cnfg_themes_cur_theme'  =>  array(
          '#type'  =>  'fieldset',
          '#title'  =>  t('Render regions of a theme'),
          '#collapsible'  =>  TRUE,
          '#collapsed'  =>  TRUE,
          '#weight' => 30
      ),
  );
  $themes = list_themes();
  $active_themes = array();
  foreach ($themes as $name => $them) {
    if ($them->status) {
      $active_themes[$name] = $name;
      $form['addfullajax_cnfg_themes']['addfullajax_cnfg_themes_' . $name . '_main_region'] = array(
        '#type'   =>  'select',
        '#title'  =>  t('Main region for @theme', array('@theme' => $name)),
        '#description'  =>  t('Select region that used for display main content.'),
        '#options' => $themes[$name]->info['regions'],
        '#default_value'  =>  variable_get('addfullajax_cnfg_themes_' . $name . '_main_region', 'content'),
      );
      $form['addfullajax_cnfg_themes']['addfullajax_cnfg_themes_cur_theme']['addfullajax_cnfg_themes_' . $name . '_regions'] = array(
        '#type'   =>  'checkboxes',
        '#title'  =>  t('For @theme', array('@theme' => $name)),
        '#description'  =>  t('Select regions that will be rendered for each FullAjax answer.'),
        '#options'  =>  $themes[$name]->info['regions'],
        '#default_value'  =>  variable_get('addfullajax_cnfg_themes_' . $name . '_regions', array('content')),
      );
    }
  }
  $form['addfullajax_cnfg_themes']['addfullajax_cnfg_themes_themes'] = array(
      '#type'  =>  'fieldset',
      '#title'  =>  t('Disable for template'),
      '#collapsible'  =>  TRUE,
      '#collapsed'  =>  TRUE,
      '#weight' => 31,
      'addfullajax_cnfg_themes_disabled'  =>  array(
          '#type'   =>  'checkboxes',
          '#title'  =>  t('Disable for themes'),
          '#description'  =>  t('Disable for theme. FullAjax will not connect for these themes.'),
          '#options'  =>  $active_themes,
          '#default_value'  =>  variable_get('addfullajax_cnfg_themes_disabled', array('seven')),
      ),
  );

  $form['addfullajax_cnfg_use_html5'] = array(
    '#type'  =>  'checkbox',
    '#title'  =>  t('HTML5 History API'),
    '#description'  =>  t('Enable using HTML5 History API'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_use_html5', 1),
  );
  $form['addfullajax_cnfg_checkmenuit'] = array(
    '#type'  =>  'checkbox',
    '#title'  =>  t('Auto check active menu item'),
    '#description'  =>  t('Enable auto check the active menu item'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_checkmenuit', 1),
  );
  $form['addfullajax_cnfg_usr_cache'] = array(
    '#type'   =>  'checkbox',
    '#title'  =>  t('User-side Cache'),
    '#description'  =>  t('Enable Cache on user-side'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_usr_cache', 1),
  );
  $form['addfullajax_cnfg_useGA'] = array(
    '#type'   =>  'checkbox',
    '#title'  =>  t('I use Google Analytics'),
    '#description'  =>  t('Check if you use Google Analytics'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_useGA', 0),
  );
  $form['addfullajax_cnfg_data'] = array(
    '#type'  =>  'textarea',
    '#title'  =>  t('FullAjax configuration'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_data', _addfullajax_def_values('conf_base')),
    '#cols'  =>  10,
    '#rows'  =>  12,
    '#description'  =>  t('JavaScript code for FullAjax configuration'),
    '#required'  =>  TRUE,
  );
  $form['addfullajax_cnfg_animation'] = array(
    '#type'  =>  'textarea',
    '#title'  =>  t('Code for AJAX animation'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_animation', _addfullajax_def_values('conf_anim')),
    '#cols'  =>  10,
    '#rows'  =>  12,
    '#description'  =>  t('JavaScript code for AJAX animation'),
    '#required'  =>  FALSE,
  );



  $form['addfullajax_cnfg_debug'] = array(
    '#type'  =>  'checkboxes',
    '#title'  =>  t('For Debug'),
    '#default_value'  =>  variable_get('addfullajax_cnfg_debug', array()),
    '#options'  =>  array(
//    'uncompresed'  =>  t('Use uncompressed lib'),
      'debug_ajax'  => t('Debug Ajax request'),
      'debug_script'  => t('Debug script loading'),
      'debug_link'  =>  t('Debug link loading'),
      'debug_style'  =>  t('Debug style loading'),
    ),
    '#description'  =>  t('Use for debug'),
    '#prefix'  =>  '<hr />',
  );

  return system_settings_form($form);
}
/**
 * Implements hook_init().
 * @version 2012.04.23
 */
function addfullajax_init() {
  global $_addfullajax_need_ajax_response;

  //check whether we allow use fullajax sripts
  if (!_addfullajax_is_allow()) {
    $_addfullajax_need_ajax_response = FALSE;
    return ;
  }

  if ((isset($_SERVER['HTTP_AJAX_ENGINE']) && $_SERVER['HTTP_AJAX_ENGINE'] == 'Fullajax')
    || (isset($_REQUEST['ax']) && $_REQUEST['ax'] == 'ok' )
  ) {
    $_addfullajax_need_ajax_response = TRUE;
    return ;
  }

  _addfullajax_add_config_js();

}

/**
 * check whether we allow use fullajax sripts
 * @return boolean
 */
function _addfullajax_is_allow() {
  //check whether allow for templates
  global $theme_key;
  $themes_disabled = variable_get('addfullajax_cnfg_themes_disabled', array('seven'));

  if (!empty($themes_disabled[$theme_key])) {
    return FALSE;
  }

  if (arg(0) == 'admin' or arg(1) == 'add' or arg(2) == 'edit'
    or stristr(request_path(), 'media/browser')) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Add JS Configuration for FullAjax
 * @version 2012.04.23
 */
function _addfullajax_add_config_js() {

  $dbg = variable_get('addfullajax_cnfg_debug');

  //Add base JS
  $lib_path = libraries_get_path('fullajax');
  drupal_add_js($lib_path . '/fullajax.js');

  $theme_default = variable_get('theme_default', 'bartik');
  $main_region = variable_get('addfullajax_cnfg_themes_' . $theme_default . '_main_region', 'content');

  $js  = "var fullAjaxId = 'flax-" . $main_region . "';\n";
  $js .= variable_get('addfullajax_cnfg_data', _addfullajax_def_values('conf_base'));
  $js .= variable_get('addfullajax_cnfg_animation', _addfullajax_def_values('conf_anim'));

  if (!variable_get('addfullajax_cnfg_use_html5', 1)) {
    $js .= "\nFLAX.Default.USE_HTML5_HISTORY = 0;";
  }

  if (variable_get('addfullajax_cnfg_checkmenuit', 1)) {
    $js .= "\n/* Change active menu item */
FLAX.Html.onall('load', function(o){
 jQuery('ul .active').removeClass('active active-trail');
 jQuery('ul li a[href=\"'+o.url+'\"]').addClass('active active-trail').parent().addClass('active active-trail');
});";}
  if (variable_get('addfullajax_cnfg_useGA', 0)) {
    $js .= "\nFLAX.Html.onall('load', function(o){ _gaq.push(['_trackPageview', o.url]); });";
  }
  if (!variable_get('addfullajax_cnfg_usr_cache', 1)) {
    $js .= "\nFLAX.Default.HAX_ANTICACHE = 1;FLAX.Default.USE_HISTORY_CACHE = 0;";
  }
  if ($dbg['debug_ajax']) {
    $js .= "\nFLAX.Default.DEBUG_AJAX=1;";
  }
  if ($dbg['debug_script']) {
    $js .= "\nFLAX.Default.DEBUG_SCRIPT=1;";
  }
  if ($dbg['debug_link']) {
    $js .= "\nFLAX.Default.DEBUG_LINK=1;";
  }
  if ($dbg['debug_style']) {
    $js .= "\nFLAX.Default.DEBUG_STYLE=1;";
  }

  drupal_add_js($js, array('type'  =>  'inline', 'weight'  =>  300));

}
/**
 * Generate JavaScript for FullAJAX Model2Blocks
 * @param array $markers - array with block ids
 */
function _addfullajax_add_model2bloks($markers) {
  $m2b = array();

  foreach (array_unique($markers) as $block) {
  	$m2b [] = '\'' . $block . '\':\'' . $block . '\'';
  }
  $js  = 'FLAX.Model2Blocks[fullAjaxId] = {' . implode(',', $m2b) . '};';

  drupal_add_js($js, array('type'  =>  'inline', 'weight'  =>  301));
}

/**
* Implements hook_theme().
* add own theme
*/
function addfullajax_theme() {
  return array(
    //theme for render FullAJAX answer
    'addfullajax_page' => array(
      'render element' => 'page',
    ),
  );
}
/**
 * process for theme_addfullajax_page
 * add $regions variable - regions that need render, not allowed was removed in addfullajax_page_alter
 * @param array $variables
 */
function template_process_addfullajax_page(&$variables) {
  $variables['regions'] = element_children($variables['page']);
}

/**
 * theme for render a page for fullajax answer
 * @param array $variables
 */
function theme_addfullajax_page(&$variables) {
  //krumo($variables);
  $output = '';
  //render regions
  foreach ($variables['regions'] as $region) {
    $output .= '<!-- :ax:flax-' . $region . ':begin: //-->';
    $output .= render($variables['page'][$region]);
    $output .= '<!-- :ax:flax-' . $region . ':end: //-->';
  }
  return $output;
}

/**
 * Implements hook_page_alter(&$page).
 * Remove regions that no need to send again
 */

function addfullajax_page_alter(&$page) {
  global $_addfullajax_need_ajax_response;

  $theme_default = variable_get('theme_default', 'bartik');
  $allowed_regions = variable_get('addfullajax_cnfg_themes_' . $theme_default . '_regions', array('content' => 'content'));
  $main_region = variable_get('addfullajax_cnfg_themes_' . $theme_default . '_main_region', 'content');
  //just in case
  $allowed_regions[$main_region] = $main_region;

  if ($_addfullajax_need_ajax_response) {
    //use own theme for answer
    $page['#theme'] = 'addfullajax_page';
    //$page['#theme_wrappers'] = array('addfullajax_html');

    //remove regions that no need render
    foreach (element_children($page) as $key) {
      if (empty($allowed_regions[$key])) {
        unset($page[$key]);
      }
    }
  }
  else {//add markers
    $regions = array();

    foreach ($allowed_regions as $r) {
      if (isset($page[$r])) {
        //add wraper
        $page[$r]['#prefix'] = empty($page[$r]['#prefix']) ? '<div id="flax-' . $r . '">' : '<div id="flax-' . $r . '">' . $page[$r]['#prefix'];
        $page[$r]['#suffix'] = empty($page[$r]['#suffix']) ? '</div>' : $page[$r]['#suffix'] . '</div>';
        //collect only alloved regions
        $regions[] = 'flax-' . $r;
      }
    }
    //add Model2Blocks if more than one region
    $count = count($regions);
    if ($count && $count > 1) {
      _addfullajax_add_model2bloks($regions);
    }
  }
}

/**
 * hook_preprocess(&$variables, $hook)
 * Preprocess theme variables.
 * remove elements, for prevent repeat it
 * @version 2011.05.26
 * TODO also looks not very good  :/

function addfullajax_preprocess(&$variables, $hook) {
  global $_addfullajax_need_ajax_response;

  if ($hook == 'page' && $_addfullajax_need_ajax_response) {
    if (isset($variables['logo'])) {
      $variables['logo'] = FALSE;
    }
    if (isset($variables['main_menu'])) {
      $variables['main_menu'] = FALSE;
    }
    if (isset($variables['secondary_menu'])) {
      $variables['secondary_menu'] = FALSE;
    }
    if (isset($variables['site_name'])) {
      $variables['site_name'] = FALSE;
    }
    if (isset($variables['site_slogan'])) {
      $variables['site_slogan'] = FALSE;}
  }

}
*/
/**
 * hook_process(&$variables, $hook)
 * Process theme variables.
 * remove content id for prevent repeat it
 * @version 2011.05.26
 * TODO maybe it no need

function addfullajax_process(&$variables, $hook) {
  global $_addfullajax_need_ajax_response;

  if ($hook == 'html' && $_addfullajax_need_ajax_response) {
    $cssId = variable_get('addfullajax_cssid', 'forfullajax');
    $variables['page'] = preg_replace('/id[\s]*=[\s]*["\']' . $cssId . '["\']/i' , 'id="' . $cssId . '_ax"', $variables['page']);
  }

}
*/
